{"version":3,"sources":["components/ErrorBoundry.js","components/MsgBox.js","components/GenerateForm.js","components/GenerateBarcode.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","this","children","React","Component","MsgBox","title","cssClasses","type","toLowerCase","message","Modal","show","onHide","closeMessage","centered","Header","className","closeButton","Title","Body","GenerateForm","handleChange","bind","GenerateFieldData","submitForm","event","console","log","target","name","value","setState","input_name","input_value","preventDefault","form","primaryAction","JSON","stringify","field","field_data","fields","map","record","index","class","label","id","for","placeholder","options","option","btnoptions","onClick","handleBtnSelectChange","required","onChange","onSubmit","leftButtonAction","onclick","secondaryAction","secondaryActionLabel","primaryActionLabel","JsBarcode","require","GenerateBarcode","showBarcode","document","getElementById","data","format","App","barcode","barcode_type","updateBarcode","errorMessage","formState","input_barcode_type","input_barcode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b1bdc887.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error) {\r\n      // Update state so the next render will show the fallback UI.\r\n      return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error, errorInfo) {\r\n      // You can also log the error to an error reporting service\r\n      //logErrorToMyService(error, errorInfo);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) {\r\n        // You can render any custom fallback UI\r\n        return <h1>Something went wrong.</h1>;\r\n      }\r\n  \r\n      return this.props.children; \r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","import React from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nconst INFO = 'info';\r\nconst WARNING = 'warning';\r\nconst ERROR = 'error';\r\n\r\nclass MsgBox extends React.Component {\r\n    render(){\r\n        let title = 'MsgBox';\r\n        if(this.props.title){\r\n            title = this.props.title;\r\n        }\r\n\r\n        let cssClasses = 'm-0 px-2 py-0 alert ';\r\n        if(this.props.type){\r\n            switch(this.props.type.toLowerCase()){\r\n                case INFO:\r\n                    cssClasses += 'alert-info';\r\n                    break;\r\n                case WARNING:\r\n                    cssClasses += 'alert-warning';\r\n                    break;\r\n                case ERROR:\r\n                    cssClasses += 'alert-danger';\r\n                    break;\r\n                default:\r\n                    cssClasses += 'alert-primary';\r\n                    break; \r\n            }    \r\n        }\r\n        else{\r\n            cssClasses += 'alert-primary';\r\n        }\r\n\r\n        if(this.props.message){\r\n            return (\r\n                <Modal show={true} onHide={this.props.closeMessage} centered>\r\n                    <Modal.Header className={cssClasses} closeButton>\r\n                        <Modal.Title>{title}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body className=\"m-0 p-2\">{this.props.message}</Modal.Body>\r\n                </Modal>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default MsgBox;","import React from 'react';\r\n\r\nconst FIELDSET = \"fieldset\";\r\nconst HIDDEN = \"hidden\";\r\nconst CHECKBOX = \"checkbox\";\r\nconst RADIO = \"radio\";\r\nconst TEXTAREA = \"textarea\";\r\nconst SELECT = \"select\";\r\nconst BTNSELECT = \"btnselect\";\r\nconst RANGE = \"range\";\r\nconst STATE = \"state\";\r\nconst BUTTON = \"button\";\r\nconst SUBMIT = \"submit\";\r\nconst RESET = \"reset\";\r\nconst IMAGE = \"image\";\r\n\r\nclass GenerateForm extends React.Component{\r\n        constructor(props) {\r\n                super(props);\r\n\r\n                this.state = {};\r\n\r\n                this.handleChange = this.handleChange.bind(this);\r\n                this.GenerateFieldData = this.GenerateFieldData.bind(this);\r\n                this.submitForm = this.submitForm.bind(this);\r\n        }\r\n\r\n        handleChange(event){\r\n                console.log('GenerateForm.js handleChange(event): invoked');\r\n                console.log('GenerateForm.js handleChange() ' + event.target.name + ': ' + event.target.value);\r\n                this.setState({\r\n                        [event.target.name]: event.target.value\r\n                },() => {\r\n                        console.log('GenerateForm.js handleChange() this.setState() finished');\r\n                });\r\n        }\r\n\r\n        handleBtnSelectChange(input_name,input_value){\r\n                this.setState({\r\n                        [input_name]: input_value\r\n                });\r\n        }\r\n\r\n        submitForm(event){\r\n                console.log('GenerateForm.js submitForm(event): invoked');\r\n                event.preventDefault();\r\n                console.log('GenerateForm.js submitForm() event.preventDefault() finished');\r\n\r\n                if(this.props.form.primaryAction){\r\n                        console.log('GenererateForm.js submitForm() this.state: ' + JSON.stringify(this.state));\r\n                        this.props.form.primaryAction(this.state);\r\n                }\r\n        }\r\n\r\n        GenerateFieldData(field){\r\n                switch (field.type.toLowerCase()){\r\n                        case FIELDSET:\r\n                                let field_data = field.fields.map((record,index) => {\r\n                                        return this.GenerateFieldData(record);\r\n                                });\r\n\r\n                                return (\r\n                                        <fieldset className={field.class ? 'mb-1 p-2 ' + field.class : 'mb-1 p-2'}>\r\n                                                <legend>{field.label}</legend>\r\n                                                {field_data}\r\n                                        </fieldset>\r\n                                );\r\n                        case HIDDEN:\r\n                                return (\r\n                                        <input id={field.name} name={field.name} type={field.type} />\r\n                                );\r\n                        case CHECKBOX:\r\n                                return (\r\n                                        <div className='form-check form-check-inline form-switch'>\r\n                                                <input className={field.class ? 'form-check-input ' + field.class : 'form-check-input'} id={field.name} name={field.name} type={field.type} />\r\n                                                <label className='form-check-label' for={field.name}>{field.label}</label>\r\n                                        </div>\r\n                                );\r\n                        case RADIO:\r\n                                return (\r\n                                        <div className='form-check form-check-inline'>\r\n                                                <input className={field.class ? 'form-check-input ' + field.class : 'form-check-input'} id={field.name} name={field.name} type={field.type} />\r\n                                                <label className='form-check-label' for={field.name}>{field.label}</label>\r\n                                        </div>\r\n                                );\r\n                        case TEXTAREA:\r\n                                return (\r\n                                        <div className='mb-1 form-floating'>\r\n                                                <textarea className={field.class ? 'form-control ' + field.class : 'form-control'} placeholder='Textarea' id={field.name} name={field.name}></textarea>\r\n                                                <label className='textarea-label' for={field.name}>{field.label}</label>\r\n                                        </div>\r\n                                );\r\n                        case SELECT:\r\n                                let options = field.options.map((option,index) => (\r\n                                        <option>{option}</option>\r\n                                ));\r\n\r\n                                return (\r\n                                        <div className='mb-1 form-floating'>\r\n                                                <select className={field.class ? 'form-select ' + field.class : 'form-select'} id={field.name} name={field.name}>\r\n                                                        <option value=\"\">--Please Select--</option>\r\n                                                        {options}\r\n                                                </select>\r\n                                                <label for={field.name}>{field.label}</label>\r\n                                        </div>\r\n                                );\r\n                        case BTNSELECT:\r\n                                let btnoptions = field.options.map((option,index) => (\r\n                                        <button type='button' className={this.state[field.name] == option ? 'mx-1 flex-fill btn btn-primary' : 'mx-1 flex-fill btn btn-secondary'} onClick={()=>this.handleBtnSelectChange(field.name,option)}>{option}</button>\r\n                                ));\r\n\r\n                                return (\r\n                                        <fieldset className='mb-1 p-1'>\r\n                                                <legend>{field.label}</legend>\r\n                                                <div className='mb-1 d-flex flex-wrap'>\r\n                                                        {btnoptions}\r\n                                                </div>\r\n                                        </fieldset>\r\n                                );\r\n                        case STATE:\r\n                                return (\r\n                                        <div className='mb-1 form-floating'>\r\n                                                <select className='form-select' id={field.name} name={field.name}>\r\n                                                        <option value=\"\">--Please Select--</option>\r\n                                                        <option value=\"AL\">Alabama</option>\r\n                                                        <option value=\"AK\">Alaska</option>\r\n                                                        <option value=\"AZ\">Arizona</option>\r\n                                                        <option value=\"AR\">Arkansas</option>\r\n                                                        <option value=\"CA\">California</option>\r\n                                                        <option value=\"CO\">Colorado</option>\r\n                                                        <option value=\"CT\">Connecticut</option>\r\n                                                        <option value=\"DE\">Delaware</option>\r\n                                                        <option value=\"DC\">District Of Columbia</option>\r\n                                                        <option value=\"FL\">Florida</option>\r\n                                                        <option value=\"GA\">Georgia</option>\r\n                                                        <option value=\"HI\">Hawaii</option>\r\n                                                        <option value=\"ID\">Idaho</option>\r\n                                                        <option value=\"IL\">Illinois</option>\r\n                                                        <option value=\"IN\">Indiana</option>\r\n                                                        <option value=\"IA\">Iowa</option>\r\n                                                        <option value=\"KS\">Kansas</option>\r\n                                                        <option value=\"KY\">Kentucky</option>\r\n                                                        <option value=\"LA\">Louisiana</option>\r\n                                                        <option value=\"ME\">Maine</option>\r\n                                                        <option value=\"MD\">Maryland</option>\r\n                                                        <option value=\"MA\">Massachusetts</option>\r\n                                                        <option value=\"MI\">Michigan</option>\r\n                                                        <option value=\"MN\">Minnesota</option>\r\n                                                        <option value=\"MS\">Mississippi</option>\r\n                                                        <option value=\"MO\">Missouri</option>\r\n                                                        <option value=\"MT\">Montana</option>\r\n                                                        <option value=\"NE\">Nebraska</option>\r\n                                                        <option value=\"NV\">Nevada</option>\r\n                                                        <option value=\"NH\">New Hampshire</option>\r\n                                                        <option value=\"NJ\">New Jersey</option>\r\n                                                        <option value=\"NM\">New Mexico</option>\r\n                                                        <option value=\"NY\">New York</option>\r\n                                                        <option value=\"NC\">North Carolina</option>\r\n                                                        <option value=\"ND\">North Dakota</option>\r\n                                                        <option value=\"OH\">Ohio</option>\r\n                                                        <option value=\"OK\">Oklahoma</option>\r\n                                                        <option value=\"OR\">Oregon</option>\r\n                                                        <option value=\"PA\">Pennsylvania</option>\r\n                                                        <option value=\"RI\">Rhode Island</option>\r\n                                                        <option value=\"SC\">South Carolina</option>\r\n                                                        <option value=\"SD\">South Dakota</option>\r\n                                                        <option value=\"TN\">Tennessee</option>\r\n                                                        <option value=\"TX\">Texas</option>\r\n                                                        <option value=\"UT\">Utah</option>\r\n                                                        <option value=\"VT\">Vermont</option>\r\n                                                        <option value=\"VA\">Virginia</option>\r\n                                                        <option value=\"WA\">Washington</option>\r\n                                                        <option value=\"WV\">West Virginia</option>\r\n                                                        <option value=\"WI\">Wisconsin</option>\r\n                                                        <option value=\"WY\">Wyoming</option>\r\n                                                </select>\r\n                                                <label for={field.name}>{field.label}</label>\r\n                                        </div>\r\n                                );\r\n                        case IMAGE:\r\n                                return null;\r\n                        case BUTTON:\r\n                                return null;\r\n                        case SUBMIT:\r\n                                return null;\r\n                        case RESET:\r\n                                return null;\r\n                        case RANGE:\r\n                                return (\r\n                                        <div className='mb-1'>\r\n                                                <input className={field.class ? 'form-range ' + field.class : 'form-range'}  id={field.name} name={field.name} type={field.type} />\r\n                                                <label for={field.name}>{field.label}</label>\r\n                                        </div>\r\n                                );\r\n                        default:\r\n                                if(field.required){\r\n                                        return (\r\n                                                <div className='mb-1 form-floating'>\r\n                                                        <input className={field.class ? 'form-control ' + field.class : 'form-control'}  id={field.name} name={field.name} type={field.type} onChange={this.handleChange} required />\r\n                                                        <label for={field.name}>{field.label}</label>\r\n                                                </div>\r\n                                        );\r\n                                }\r\n                                else{\r\n                                        return (\r\n                                                <div className='mb-1 form-floating'>\r\n                                                        <input className={field.class ? 'form-control ' + field.class : 'form-control'}  id={field.name} name={field.name} type={field.type} onChange={this.handleChange} />\r\n                                                        <label for={field.name}>{field.label}</label>\r\n                                                </div>\r\n                                        );\r\n                                }\r\n                }\r\n        }\r\n\r\n        render(){\r\n                let fields = this.props.form.fields.map((field, index) => {\r\n                        return this.GenerateFieldData(field);\r\n                });\r\n\r\n                return(\r\n                        <form onSubmit={this.submitForm}>\r\n                                {fields}\r\n                                <div className='mb-1 row'>\r\n                                        <div className='col-5 d-grid'>{ this.props.leftButtonAction ? <button className='btn btn-secondary' onclick={this.props.secondaryAction}>{this.props.secondaryActionLabel ? this.props.secondaryActionLabel : 'Cancel'}</button> : null }</div>\r\n                                        <div className='col-2'></div>\r\n                                        <div className='col-5 d-grid'><button className='btn btn-primary'>{this.props.form.primaryActionLabel ? this.props.form.primaryActionLabel : 'Submit'}</button></div>\r\n                                </div>\r\n                        </form>\r\n                );\r\n        }\r\n}\r\n\r\nexport default GenerateForm;\r\n","import React from 'react';\r\n\r\nlet JsBarcode = require('jsbarcode');\r\n\r\nconst UPC_A = \"UPC-A\";\r\nconst UPC_E = \"UPC-E\";\r\nconst EAN_13 = \"EAN-13\";\r\nconst EAN_8 = \"EAN-8\";\r\n\r\nclass GenerateBarcode extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.showBarcode = this.showBarcode.bind(this);\r\n\t}\r\n\r\n    showBarcode(){\r\n        console.log('GenerateBarcode.js showBarcode() invoked');\r\n        console.log('GenerateBarcode.js showBarcode() this.props: ' + JSON.stringify(this.props));\r\n\r\n        if(document.getElementById(this.props.id) && this.props.data){\r\n            switch(this.props.type){\r\n                case UPC_A:\r\n                    JsBarcode(document.getElementById(this.props.id), this.props.data, {format: \"UPC\"});\r\n                    break;\r\n                case UPC_E:\r\n                    JsBarcode(document.getElementById(this.props.id), this.props.data, {format: \"UPC\"});\r\n                    break;\r\n                case EAN_13:\r\n                    JsBarcode(document.getElementById(this.props.id), this.props.data, {format: \"EAN13\"});\r\n                    break;\r\n                case EAN_8:\r\n                    JsBarcode(document.getElementById(this.props.id), this.props.data, {format: \"EAN8\"});\r\n                    break;\r\n                default:\r\n                    JsBarcode(document.getElementById(this.props.id), this.props.data, {format: \"CODE128\"}); \r\n            }    \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('GenerateBarcode.js componentDidMount() invoked');\r\n        this.showBarcode();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('GenerateBarcode.js componentDidUpdate() invoked');\r\n        this.showBarcode();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <svg id={this.props.id}></svg>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GenerateBarcode;","import React from 'react';\r\nimport ErrorBoundary from './components/ErrorBoundry';\r\nimport MsgBox from './components/MsgBox';\r\nimport GenerateForm from './components/GenerateForm';\r\nimport GenerateBarcode from './components/GenerateBarcode';\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tbarcode: '',\r\n\t\t\tbarcode_type: 'CODE128'\r\n\t\t}\r\n\r\n\t\tthis.closeMessage = this.closeMessage.bind(this);\r\n\t\tthis.updateBarcode = this.updateBarcode.bind(this);\r\n\t}\r\n\r\n\tcloseMessage(){\r\n\t\tthis.setState({\r\n\t\t\terrorMessage: ''\r\n\t\t});\r\n\t}\r\n\r\n    updateBarcode(formState){\r\n\t\tconsole.log('App.js updateBarcode(formState): invoked');\r\n\t\tconsole.log('App.js updateBarcode() formState: ' + JSON.stringify(formState));\r\n\t\tif(formState){\r\n\t\t\tif(!formState.input_barcode_type){\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\terrorMessage: 'Please select a barcode type'\r\n\t\t\t\t});\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log('App.js updateBarcode() formState.input_barcode: ' + formState.input_barcode);\r\n\t\t\tthis.setState({\r\n\t\t\t\tbarcode: formState.input_barcode,\r\n\t\t\t\tbarcode_type: formState.input_barcode_type\r\n\t\t\t}, () => {\r\n\t\t\t\tconsole.log('App.js updateBarcode() this.setState() finished');\r\n\t\t\t\tconsole.log('App.js updateBarcode() this.state: ' + JSON.stringify(this.state));\r\n\t\t\t});\r\n\t\t}\r\n    }\r\n\r\n\trender(){\r\n\t\tlet form = {\r\n\t\t\tfields: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'input_barcode_type',\r\n\t\t\t\t\tlabel: 'Barcode Type',\r\n\t\t\t\t\ttype: 'btnselect',\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\toptions: [\r\n\t\t\t\t\t\t'UPC-A',\r\n\t\t\t\t\t\t'UPC-E',\r\n\t\t\t\t\t\t'EAN-13',\r\n\t\t\t\t\t\t'EAN-8',\r\n\t\t\t\t\t\t'CODE128'\r\n\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'input_barcode',\r\n\t\t\t\t\tlabel: 'Barcode',\r\n\t\t\t\t\ttype: 'number',\r\n\t\t\t\t\trequired: true\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tprimaryAction: this.updateBarcode,\r\n\t\t\tprimaryActionLabel: 'Generate'\r\n\t\t};\t\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container p-3\">\r\n\t\t\t\t<GenerateForm form={form} />\r\n\t\t\t\t<div class='d-flex justify-content-center'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<GenerateBarcode id='barcode' data={this.state.barcode} type={this.state.barcode_type} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.state.errorMessage ? <MsgBox title='ERROR' message={this.state.errorMessage} closeMessage={this.closeMessage} /> : null}\r\n\t\t\t</div>\r\n\t\t);  \r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}